Dump	==========================================================
Execute	.dns.named_conf_convert "/etc/named.conf" 0
Execute	.target.bash_output "stat --format='rights: %a, blocks: %b, size: %s, owner: %u:%g changed: %Z, modifyied: %Y' /etc/named.conf" $["exit":1, "stderr":"", "stdout":""]
Read	.sysconfig.named.NAMED_RUN_CHROOTED nil
Read	.sysconfig.network.config.NETCONFIG_DNS_POLICY "STATIC"
Dir	.dns.named.section: ["options", "zone \"localhost\" in"]
Dir	.dns.named.value.options: ["directory", "notify"]
Read	.dns.named.value.options.directory ["\"/var/lib/named\""]
Read	.dns.named.value.options.notify ["no"]
Read	.sysconfig.network.config.NETCONFIG_DNS_STATIC_SERVERS "5.5.5.5 6.6.6.6 7.7.7.7"
Dir	.dns.named.section: ["options", "zone \"localhost\" in"]
Read	.dns.named.value.acl []
Read	.sysconfig.named.NAMED_CONF_INCLUDE_FILES nil
Read	.target.ycp "/var/lib/YaST2/yast2-dns-server_reverse-zones" $[]
Read	.dns.named.value."zone \"localhost\" in".type ["master"]
Read	.dns.named.value."zone \"localhost\" in".file ["\"localhost.zone\""]
Read	.dns.zone "/var/lib/named/localhost.zone" $["TTL":"1W", "records":[$["key":"", "type":"NS", "value":"@"], $["key":"", "type":"A", "value":"127.0.0.1"], $["key":"localhost2", "type":"A", "value":"127.0.0.2"]], "soa":$["expiry":"6W", "mail":"root", "minimum":"1W", "refresh":"2D", "retry":"4H", "serial":42, "server":"@", "zone":"@"]]
Dir	.dns.named.value."zone \"localhost\" in": ["file", "type"]
Read	.dns.named.value."zone \"localhost\" in"."file" ["\"localhost.zone\""]
Read	.dns.named.value."zone \"localhost\" in"."type" ["master"]
Write	.target.ycp "/var/lib/YaST2/yast2-dns-server_reverse-zones" $[] true
Execute	.target.bash_output "stat --format='rights: %a, blocks: %b, size: %s, owner: %u:%g changed: %Z, modifyied: %Y' /etc/named.conf" $["exit":1, "stderr":"", "stdout":""]
Write	.dns.named.value.acl [] true
Dir	.dns.named.section: ["options", "zone \"localhost\" in"]
Dir	.dns.named.value.options: ["directory", "notify"]
Write	.dns.named.value.options."forwarders" nil true
Write	.dns.named.value.options."directory" ["\"/var/lib/named\""] true
Write	.sysconfig.network.config.NETCONFIG_DNS_STATIC_SERVERS "5.5.5.5 6.6.6.6 7.7.7.7" true
Write	.dns.named.value.options."include" ["\"/etc/named.d/forwarders.conf\""] true
Write	.dns.named.value.options."notify" ["no"] true
Dir	.dns.named.section: ["options", "zone \"localhost\" in"]
Write	.dns.named nil true
Dir	.dns.named.value: ["acl", "options", "zone \"localhost\" in"]
Read	.sysconfig.named.NAMED_CONF_INCLUDE_FILES nil
Write	.sysconfig.named.NAMED_CONF_INCLUDE_FILES "" true
Read	.sysconfig.named.NAMED_INITIALIZE_SCRIPTS nil
Write	.sysconfig.named.NAMED_INITIALIZE_SCRIPTS "createNamedConfInclude" true
Write	.sysconfig.named nil true
Write	.dns.named nil true
Write	.sysconfig.named.NAMED_RUN_CHROOTED "yes" true
Write	.sysconfig.named nil true
Write	.sysconfig.network.config.NETCONFIG_DNS_POLICY "STATIC" true
Read	.sysconfig.named.NAMED_INITIALIZE_SCRIPTS nil
Write	.sysconfig.named.NAMED_INITIALIZE_SCRIPTS "" true
Write	.sysconfig.named nil true
Write	.dns.named.value."zone \"example.com\" in".type ["master"] true
Dir	.dns.named.value."zone \"example.com\" in": []
Write	.dns.named.value."zone \"example.com\" in"."type" ["master"] true
Write	.dns.named.value."zone \"example.com\" in"."file" ["\"example.com.zone\""] true
Execute	.target.bash_output "/bin/hostname --fqdn" $["exit":1, "stderr":"", "stdout":""]
Write	.dns.zone ["/var/lib/named/example.com", $["TTL":"1W", "records":[$["key":"host", "type":"A", "value":"127.0.0.1"], $["key":"example.com.", "type":"NS", "value":"@"]], "soa":$["expiry":"6W", "mail":"root", "minimum":"1W", "refresh":"2D", "retry":"4H", "serial":"2004012701", "server":"@", "zone":"@"]]] true
Write	.dns.named.value."zone \"example.com\" in".file ["\"example.com\""] true
Write	.dns.named.value."zone \"example.com\" in".type ["master"] true
Write	.sysconfig.network.config.NETCONFIG_DNS_FORWARDER "bind" true
Write	.sysconfig.network.config nil true
Execute	.target.bash_output "/sbin/netconfig update -m dns" $["exit":1, "stderr":"", "stdout":""]
Write	.target.ycp "/var/lib/YaST2/dns_server" $[] true
Write	.sysconfig.network.config.NETCONFIG_DNS_FORWARDER "resolver" true
Write	.sysconfig.network.config nil true
Execute	.target.bash_output "/sbin/netconfig update -m dns" $["exit":1, "stderr":"", "stdout":""]
Return	true
Dump	==========================================================
